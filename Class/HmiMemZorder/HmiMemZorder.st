//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION
#include "..\..\Source\Common\hmi_nuc.h"

(*!
<Class
	Name               = "HmiMemZorder"
	Revision           = "0.0"
	GUID               = "{8B7E41BF-B145-49AB-A53F-E6600809D500}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{7A6FDEDB-1603-4916-8C54-D95F11B7D359}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Client Name="File" Required="true" Internal="false"/>
	</Channels>
	<Dependencies>
		<Files>
			<File Path=".\Source\Common\hmi_nuc.h" Include="true"/>
		</Files>
	</Dependencies>
</Class>
*)
HmiMemZorder : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
  //Clients:
	File 	: CltChCmd_HmiFile;
  //Variables:
		No 	: UDINT;
		Ptr 	: ^HMI_ANYTHING;
  //Functions:
	
	FUNCTION HmiMemZorder
		VAR_OUTPUT
			ret_code 	: ConfStates;
		END_VAR;
	
	FUNCTION GLOBAL Free;
	
	FUNCTION GLOBAL Load
		VAR_OUTPUT
			retcode 	: BOOL;
		END_VAR;
	
	FUNCTION GLOBAL Get
		VAR_INPUT
			index 	: UDINT;
		END_VAR
		VAR_OUTPUT
			retcode 	: ^HMI_ANYTHING;
		END_VAR;
	
	FUNCTION GLOBAL GetNo
		VAR_OUTPUT
			retcode 	: UDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma usingLtd HmiFile


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB HmiMemZorder::@CT_
0$UINT,
2#0100000000000000$UINT, //TY_HMIMEMZORDER
0$UINT, 0$UINT, (SIZEOF(::HmiMemZorder))$UINT, 
1$UINT, 1$UINT, 0$UINT, 
TO_UDINT(822070823), "HmiMemZorder", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::HmiMemZorder.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
//Clients:
(::HmiMemZorder.File.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(3121273764), "File", TO_UDINT(2548286290), "HmiFile", 0$UINT, 4$UINT, 
END_FUNCTION


#define USER_CNT_HmiMemZorder 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_HmiMemZorder] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION HmiMemZorder::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_HmiMemZorder, pCmd := #vmt.CmdTable);
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	ret_code	:= HmiMemZorder();

END_FUNCTION

//{{LSL_IMPLEMENTATION

FUNCTION HmiMemZorder::HmiMemZorder
	VAR_OUTPUT
		ret_code 	: ConfStates;
	END_VAR

	ret_code := C_OK;
  No  := 0;
  Ptr := NIL;

END_FUNCTION

FUNCTION GLOBAL HmiMemZorder::Free
  var 
    tmp : ^HMI_ANYTHING; 
  end_var

  tmp := Ptr; 
  while(No) do
    No -= 1; 
    free_HMI_ANYTHING(tmp); 
    tmp += sizeof(HMI_ANYTHING); 
  end_while; 
  
  File.FMemory(#Ptr, 0);   
  No  := 0;
  Ptr := NIL;

END_FUNCTION

FUNCTION GLOBAL HmiMemZorder::Load
	VAR_OUTPUT
		retcode 	: BOOL;
	END_VAR
  var 
    anz : udint; 
    tmp : ^HMI_ANYTHING; 
  end_var; 

  retcode := false; 

  Free(); 

  if(File.FRead(#anz, 4) = true) then
    if(File.FMemory(#Ptr$^void, anz * sizeof(HMI_ANYTHING)) = true) then
      tmp := Ptr; 
      No  := anz; 
      while(anz) do
        init_HMI_ANYTHING(tmp); 
        File.Read_HMI_ANYTHING(tmp); 
        tmp += sizeof(HMI_ANYTHING); 
        anz -= 1; 
      end_while; 

      retcode := File.FChkFile();
    end_if; 
  end_if; 
    
  ClassSvr := to_dint(No);   

END_FUNCTION

FUNCTION GLOBAL HmiMemZorder::Get
	VAR_INPUT
		index 	: UDINT;
	END_VAR
	VAR_OUTPUT
		retcode 	: ^HMI_ANYTHING;
	END_VAR

  retcode := NIL; 
  if(index < No) then
    retcode := Ptr + (index * sizeof(HMI_ANYTHING));
  end_if; 

END_FUNCTION

FUNCTION GLOBAL HmiMemZorder::GetNo
	VAR_OUTPUT
		retcode 	: UDINT;
	END_VAR

  retcode := No; 

END_FUNCTION
