//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)

//{{LSL_DEFINES
#define test 1
//}}LSL_DEFINES

//{{LSL_DECLARATION

(*!
<Class
	Name               = "pumpControl"
	Revision           = "0.0"
	GUID               = "{01B32DAA-35DC-4544-B6EB-8DF2D5E55FE5}"
	RealtimeTask       = "false"
	CyclicTask         = "true"
	DefCyclictime      = "10 ms"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(484,120)">
	<Channels>
		<Server Name="ActFillLevelVisu" GUID="{CDA3CDB1-3190-4F12-A4EF-1CA4C538D357}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="ClassSvr" GUID="{2F770A01-C02F-4497-8C88-7CA008311A38}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="MaxBorder" GUID="{2F311C93-1D7D-4D69-8C7F-32DE149487E7}" Visualized="true" Initialize="true" DefValue="800" WriteProtected="false" Retentive="File"/>
		<Server Name="MinBorder" GUID="{9B1B99B4-3F73-4ADE-B203-7C116B8C865D}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="File"/>
		<Server Name="PumpVisu" GUID="{B5CD9F4A-D793-40ED-AAC6-4824B39013F5}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="tt" GUID="{BACD9F4A-D793-40ED-AAC6-4824B39013F5}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="ttt" GUID="{BACD9F4A-D793-4FED-AAC6-4824B39013F5}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="tttt" GUID="{BACD9F4A-D793-4FED-AAC6-4824B39013FA}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Client Name="ActFillLevel" Required="false" Internal="false"/>
		<Client Name="Pump" Required="false" Internal="false"/>
		<Client Name="test1" Required="false" Internal="false"/>
		<Client Name="test2" Required="false" Internal="false"/>
	</Channels>
</Class>
*)
pumpControl : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	MaxBorder 	: SvrCh_DINT;
	MinBorder 	: SvrCh_DINT;
	ActFillLevelVisu 	: SvrCh_DINT;
	PumpVisu 	: SvrCh_DINT;
	tt 	: SvrCh_DINT;
	ttt 	: SvrCh_DINT;
	tttt 	: SvrCh_DINT;
  //Clients:
	Pump 	: CltCh_DINT;
	ActFillLevel 	: CltCh_DINT;
	test2 	: CltCh_DINT;
	test1 	: CltCh_DINT;
  //Variables:
		pu 	: DINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL CyWork
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL ActFillLevelVisu::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL PumpVisu::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB pumpControl::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_PUMPCONTROL
0$UINT, 0$UINT, (SIZEOF(::pumpControl))$UINT, 
8$UINT, 4$UINT, 0$UINT, 
TO_UDINT(2030910333), "pumpControl", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::pumpControl.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::pumpControl.MaxBorder.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(3122042895), "MaxBorder", 
(::pumpControl.MinBorder.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(1845307982), "MinBorder", 
(::pumpControl.ActFillLevelVisu.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2701678064), "ActFillLevelVisu", 
(::pumpControl.PumpVisu.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3515248923), "PumpVisu", 
(::pumpControl.tt.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(4077395778), "tt", 
(::pumpControl.ttt.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(639980227), "ttt", 
(::pumpControl.tttt.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3159346232), "tttt", 
//Clients:
(::pumpControl.Pump.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2927778905), "Pump", 
(::pumpControl.ActFillLevel.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(3836865475), "ActFillLevel", 
(::pumpControl.test2.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(3749801760), "test2", 
(::pumpControl.test1.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(1183334042), "test1", 
END_FUNCTION


#define USER_CNT_pumpControl 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_pumpControl] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION pumpControl::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_pumpControl, pCmd := #vmt.CmdTable);
	vmt.CmdTable.CyWork		:= #CyWork();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	MaxBorder.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF MaxBorder.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	MinBorder.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF MinBorder.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	ActFillLevelVisu.pMeth			:= StoreMethod( #ActFillLevelVisu::Read(), #M_NO_F() );
	IF ActFillLevelVisu.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	PumpVisu.pMeth			:= StoreMethod( #PumpVisu::Read(), #M_NO_F() );
	IF PumpVisu.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL pumpControl::CyWork
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR
  ActFillLevel := ActFillLevel.Read();
  pu := ActFillLevel;
  if ActFillLevel >= MaxBorder then
    pump := 1;
  elsif ActFillLevel <= MinBorder then
    pump := 0;
  end_if;

  
  Pump.Write (Pump)
	state := READY;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL pumpControl::ActFillLevelVisu::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	ActFillLevelVisu := ActFillLevel;

	output := ActFillLevelVisu;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL pumpControl::PumpVisu::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	PumpVisu := Pump;

	output := PumpVisu;

END_FUNCTION
