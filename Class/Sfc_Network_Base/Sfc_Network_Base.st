//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "Sfc_Network_Base"
	Revision           = "2.0"
	GUID               = "{A0B82F12-8E4C-48EA-8534-A0A766C53CF9}"
	RealtimeTask       = "true"
	CyclicTask         = "true"
	BackgroundTask     = "true"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(510,240)"
	Comment            = "Base class for Sfc classes.&#13;&#10;&#13;&#10;Changes to the major revision&#13;&#10;indicate incompatibility with&#13;&#10;older Lasal Class versions.">
	<Channels>
		<Server Name="ClassSvr" GUID="{3D1E701A-28BC-490F-8714-134AA977AC71}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="GetPtrItf" GUID="{3F7E32FC-37BD-458B-8732-8CF348965717}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false" Comment="Helper server that returns the&#13;&#10;this pointer to the current object&#13;&#10;when the read method is called"/>
		<Server Name="LogonItf_Action" GUID="{08153A89-467C-481E-AB37-46A80237F401}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="LogonItf_Step" GUID="{AD2AF2BC-2437-4782-B58C-CE38401CCD17}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Client Name="Init_Step_Itf" Required="true" Internal="false" Comment="Client for activating the init step"/>
		<Client Name="Sfc_Invoke_Actions" Required="true" Internal="true"/>
		<Client Name="Sfc_Invoke_Steps" Required="true" Internal="true"/>
		<Client Name="Sort_Actions_By_Priority" Required="true" Internal="true"/>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek" Author="LesMax"/>
		<Dokumentation Revision="2.0" Date="2014-05-20" Author="LesMax" Company="Sigmatek" Description="Introduced new action priority management&#13;&#10;for a defined calling sequence."/>
		<Dokumentation Revision="1.2" Date="2013-10-17" Author="LesMax" Company="Sigmatek" Description="Removed automatic update of server values&#13;&#10;Added new server for reading the this pointer&#13;&#10;of the Sfc class"/>
		<Dokumentation Revision="1.1" Date="2013-08-19" Author="LesMax" Company="Sigmatek" Description="Added an automatic update of the servers of a SFC class after all actions were computed"/>
	</RevDoku>
	<Network Name="Sfc_Network_Base">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "Sfc_Invoke_Actions"
				GUID       = "{1156238D-60C1-4742-B60E-AEFB4282C114}"
				Class      = "Sfc_ActionInvoker"
				Position   = "(330,390)"
				Visualized = "false">
				<Channels>
					<Server Name="LogonItf"/>
					<Client Name="To_Sfc_Sort"/>
				</Channels>
			</Object>
			<Object
				Name       = "Sfc_Invoke_Steps"
				GUID       = "{666EB3A0-B2F5-42B5-B195-B8E44CCB602E}"
				Class      = "Sfc_StepInvoker"
				Position   = "(330,240)"
				Visualized = "false">
				<Channels>
					<Server Name="LogonItf"/>
				</Channels>
			</Object>
			<Object
				Name       = "Sort_Actions_By_Priority"
				GUID       = "{115D6E7D-EAC5-4F4F-B97E-690A947B94BC}"
				Class      = "Sfc_Sort"
				Position   = "(330,570)"
				Visualized = "false">
				<Channels>
					<Server Name="ClassSvr"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
			<Comment Position="(210,120)" Size="(570,60)" Text="Invoker for Steps and Actions&#13;&#10;"/>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.Sfc_Invoke_Steps" Destination="Sfc_Invoke_Steps.LogonItf"/>
			<Connection Source="this.Sfc_Invoke_Actions" Destination="Sfc_Invoke_Actions.LogonItf"/>
			<Connection Source="this.LogonItf_Step" Destination="Sfc_Invoke_Steps.LogonItf" Vertices="(936,270),(630,330),"/>
			<Connection Source="this.LogonItf_Action" Destination="Sfc_Invoke_Actions.LogonItf" Vertices="(936,330),(630,480),"/>
			<Connection Source="this.Sort_Actions_By_Priority" Destination="Sort_Actions_By_Priority.ClassSvr"/>
			<Connection Source="Sfc_Invoke_Actions.To_Sfc_Sort" Destination="Sort_Actions_By_Priority.ClassSvr" Vertices="(330,480),(300,480),(300,540),(660,540),(660,660),(630,660),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
Sfc_Network_Base : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	LogonItf_Step 	: SvrCh_pVoid;
	LogonItf_Action 	: SvrCh_pVoid;
	GetPtrItf 	: SvrCh_UDINT;
  //Clients:
	Sfc_Invoke_Steps 	: CltChCmd_Sfc_StepInvoker;
	Init_Step_Itf 	: CltCh_DINT;
	Sfc_Invoke_Actions 	: CltChCmd_Sfc_ActionInvoker;
	Sort_Actions_By_Priority 	: CltChCmd_SFC_Sort;
  //Variables:
		m_IsFirstExecution 	: BOOL;
		m_pSfcClsHdr 	: ^ClsHdr;
  //Functions:
	
	FUNCTION Sfc_Network_Base
		VAR_OUTPUT
			ret_code 	: ConfStates;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL CyWork
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL RtWork
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL Background
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION OnFirstExecution;
	
	FUNCTION GLOBAL Work;
	
	FUNCTION GLOBAL UpdateActionPriorities;
	
	FUNCTION VIRTUAL GLOBAL LogonItf_Step::Read
		VAR_OUTPUT
			output (EAX) 	: pVoid;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL LogonItf_Step::Write
		VAR_INPUT
			input (EAX) 	: pVoid;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: pVoid;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL LogonItf_Action::Read
		VAR_OUTPUT
			output (EAX) 	: pVoid;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL LogonItf_Action::Write
		VAR_INPUT
			input (EAX) 	: pVoid;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: pVoid;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL GetPtrItf::Read
		VAR_OUTPUT
			output (EAX) 	: UDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using Sfc_ActionInvoker
#pragma using Sfc_Sort
#pragma using Sfc_StepInvoker


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Sfc_Network_Base::@CT_
0$UINT,
2#0100000000000000$UINT, //TY_SFC_NETWORK_BASE
2$UINT, 0$UINT, (SIZEOF(::Sfc_Network_Base))$UINT, 
4$UINT, 4$UINT, 0$UINT, 
TO_UDINT(1657156943), "Sfc_Network_Base", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Sfc_Network_Base.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::Sfc_Network_Base.LogonItf_Step.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(977577754), "LogonItf_Step", 
(::Sfc_Network_Base.LogonItf_Action.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(944741233), "LogonItf_Action", 
(::Sfc_Network_Base.GetPtrItf.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1948718882), "GetPtrItf", 
//Clients:
(::Sfc_Network_Base.Sfc_Invoke_Steps.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(4036242667), "Sfc_Invoke_Steps", TO_UDINT(3408257381), "Sfc_StepInvoker", 1$UINT, 0$UINT, 
(::Sfc_Network_Base.Init_Step_Itf.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(2597817867), "Init_Step_Itf", 
(::Sfc_Network_Base.Sfc_Invoke_Actions.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(3643573661), "Sfc_Invoke_Actions", TO_UDINT(1405604901), "Sfc_ActionInvoker", 2$UINT, 0$UINT, 
(::Sfc_Network_Base.Sort_Actions_By_Priority.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(3513441984), "Sort_Actions_By_Priority", TO_UDINT(3962211165), "SFC_Sort", 1$UINT, 0$UINT, 
END_FUNCTION


#define USER_CNT_Sfc_Network_Base 1

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Sfc_Network_Base] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Sfc_Network_Base::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Sfc_Network_Base, pCmd := #vmt.CmdTable);
	vmt.CmdTable.CyWork		:= #CyWork();
	vmt.CmdTable.RtWork		:= #RtWork();
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #Background();

#pragma warning (default : 74)
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	LogonItf_Step.pMeth			:= StoreMethod( #LogonItf_Step::Read(), #LogonItf_Step::Write() );
	IF LogonItf_Step.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	LogonItf_Action.pMeth			:= StoreMethod( #LogonItf_Action::Read(), #LogonItf_Action::Write() );
	IF LogonItf_Action.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	GetPtrItf.pMeth			:= StoreMethod( #GetPtrItf::Read(), #M_NO_F() );
	IF GetPtrItf.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	ret_code	:= Sfc_Network_Base();

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL Sfc_Network_Base::LogonItf_Step::Read
	VAR_OUTPUT
		output (EAX) 	: pVoid;
	END_VAR

	LogonItf_Step := Sfc_Invoke_Steps.LogonItf.Read();
	output := LogonItf_Step;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL Sfc_Network_Base::LogonItf_Step::Write
	VAR_INPUT
		input (EAX) 	: pVoid;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: pVoid;
	END_VAR

	LogonItf_Step := input;
 	result := (Sfc_Invoke_Steps.LogonItf.Write(LogonItf_Step))$pVoid;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL Sfc_Network_Base::LogonItf_Action::Read
	VAR_OUTPUT
		output (EAX) 	: pVoid;
	END_VAR

	LogonItf_Action := Sfc_Invoke_Actions.LogonItf.Read();
	output := LogonItf_Action;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL Sfc_Network_Base::LogonItf_Action::Write
	VAR_INPUT
		input (EAX) 	: pVoid;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: pVoid;
	END_VAR

	LogonItf_Action := input;
 	result := (Sfc_Invoke_Actions.LogonItf.Write(LogonItf_Action))$pVoid;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL Sfc_Network_Base::RtWork
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR
  
  Work();

	state := READY;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL Sfc_Network_Base::CyWork
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR
  
  Work();

	state := READY;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL Sfc_Network_Base::Background
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR
  
  Work();

	state := READY;

END_FUNCTION


FUNCTION Sfc_Network_Base::Sfc_Network_Base
	VAR_OUTPUT
		ret_code 	: ConfStates;
	END_VAR
  VAR
	  pObj			: ^Obj;
    pCls      : ^ClsHdr;
  END_VAR
  
  m_IsFirstExecution := true;
  
  // Get the first class header
  pObj		:= LSL_GetHdr(THIS);
	pCls		:= pObj^.pClsHdr;
  
  // Find the Class Header of the SFC class
  // (It is always the second class in the class hierarchy)
  while (pCls <> NIL) & (pCls^.pBaseCls <> NIL) & (pCls^.pBaseCls^.pBaseCls <> NIL) do
    pCls := pCls^.pBaseCls;
  end_while;

  // Save the Class Header of the SFC class.
  m_pSfcClsHdr := pCls;

	ret_code := C_OK;

END_FUNCTION


FUNCTION GLOBAL Sfc_Network_Base::Work
  
  if m_IsFirstExecution = true then
  
    m_IsFirstExecution := false;
    
    OnFirstExecution();
  
  end_if;
  
  // Execute work routine of active actions
  Sfc_Invoke_Actions.Work();
  
  // Execute work routine of active steps
  Sfc_Invoke_Steps.Work();
  
END_FUNCTION


FUNCTION Sfc_Network_Base::OnFirstExecution
  
  // Activate Init Step at first execution
  Init_Step_Itf.Write(input:=1);

END_FUNCTION


FUNCTION VIRTUAL GLOBAL Sfc_Network_Base::GetPtrItf::Read
	VAR_OUTPUT
		output (EAX) 	: UDINT;
	END_VAR

	output := this$UDINT;

END_FUNCTION


FUNCTION GLOBAL Sfc_Network_Base::UpdateActionPriorities

  Sfc_Invoke_Actions.UpdateActionPriorities();
  
END_FUNCTION
