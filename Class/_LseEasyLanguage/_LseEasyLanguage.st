//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "_LseEasyLanguage"
	Revision           = "1.0"
	GUID               = "{BC236D6D-53BE-469D-A3D5-EB4C7A7E9711}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(480,120)"
	Comment            = "Language Selection for Lse Easy&#13;&#10;Writes the selected language via object channel to the LseEasy object.">
	<Channels>
		<Server Name="SelLanguageBit" GUID="{0F76DA71-F588-40C9-AB8C-19A1D64FBAE1}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="File" Comment="Server for BITWISE language selection. &#13;&#10;Bit 0: select language 1 of the &quot;Languages to compile&quot; list of LSE project&#13;&#10;Bit 1: select language 2 of the &quot;Languages to compile&quot; list of LSE project&#13;&#10;Bit 2: select language 3 of the &quot;Languages to compile&quot; list of LSE project&#13;&#10;and so on ...&#13;&#10;"/>
		<Client Name="_Radio321" Required="true" Internal="true"/>
		<Client Name="LseEasy" Required="true" Internal="false" Comment="object channel to the LseEasy object"/>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek GmbH" Author="Weitho"/>
		<Dokumentation Revision="1.0" Date="2017-05-03" Author="KaiAnd" Company="Sigmatek GmbH" Description="Creation of class"/>
	</RevDoku>
	<Network Name="_LseEasyLanguage">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_Radio321"
				GUID       = "{F3E7AB6C-E527-4966-9BE0-A186B81D6409}"
				Class      = "_Radio32"
				Position   = "(180,180)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="Data"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this._Radio321" Destination="_Radio321.Data"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
_LseEasyLanguage : CLASS
	TYPE
	  TYPE_Language : BDINT  //! <Type Public="true" Name="TYPE_Language"/>
	  [
	    1 L_DE,
	    2 L_GB,
	  ];
	END_TYPE
  //Servers:
	SelLanguageBit 	: SvrChCmd_TYPE_Language_PTofCls__LseEasyLanguage;
  //Clients:
	LseEasy 	: CltChCmd_LseEasy;
	_Radio321 	: CltChCmd__Radio32;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL GLOBAL SelLanguageBit::Write
		VAR_INPUT
			input (EAX) 	: _LseEasyLanguage::TYPE_Language;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: _LseEasyLanguage::TYPE_Language;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using _Radio32
#pragma usingLtd LseEasy


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB _LseEasyLanguage::@CT_
0$UINT,
2#0100000000000000$UINT, //TY__LSEEASYLANGUAGE
1$UINT, 0$UINT, (SIZEOF(::_LseEasyLanguage))$UINT, 
1$UINT, 2$UINT, 0$UINT, 
TO_UDINT(2597323861), "_LseEasyLanguage", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::_LseEasyLanguage.SelLanguageBit.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000011000$UINT, TO_UDINT(1248571423), "SelLanguageBit", 
//Clients:
(::_LseEasyLanguage.LseEasy.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(1518191916), "LseEasy", TO_UDINT(1518191916), "LseEasy", 1$UINT, 32$UINT, 
(::_LseEasyLanguage._Radio321.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(641934804), "_Radio321", TO_UDINT(2508130343), "_Radio32", 0$UINT, 1$UINT, 
END_FUNCTION


#define USER_CNT__LseEasyLanguage 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT__LseEasyLanguage] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION _LseEasyLanguage::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT__LseEasyLanguage, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Write		:= #Write();
	vmt.CmdTable.Init		:= #Init();
	SelLanguageBit.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF SelLanguageBit.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION

FUNCTION VIRTUAL GLOBAL _LseEasyLanguage::Init

  if (_FirstScan) then
  
    if (SelLanguageBit = 0) then
      SelLanguageBit := 1;
    end_if;

  end_if;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL _LseEasyLanguage::SelLanguageBit::Write
	VAR_INPUT
		input (EAX) 	: _LseEasyLanguage::TYPE_Language;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: _LseEasyLanguage::TYPE_Language;
	END_VAR
  VAR
	  LangIdx  : UDINT;
    myBit    : BDINT;
    u        : UDINT;
  END_VAR

	SelLanguageBit := _Radio321.Data.Write(input:=input);
	result := SelLanguageBit;

  myBit   := SelLanguageBit;
  LangIdx := 0;   // Index in "Languages to compile" list of LSE project

  // convert  Bit-Nr. to index (0-31)
  for u:=0 to 31 do
  
    if ( (myBit SHR u) and 1) then
      LangIdx := u;
      exit;
    end_if;

  end_for;

  LseEasy.ActLanguage.Write(LangIdx);


END_FUNCTION

