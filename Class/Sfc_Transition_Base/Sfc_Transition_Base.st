//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "Sfc_Transition_Base"
	Revision           = "1.2"
	GUID               = "{36289C4C-5898-4306-9534-2E4BA866972D}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)"
	Comment            = "Base class for transitions.">
	<Channels>
		<Server Name="TransitionItf" GUID="{F59F0CF4-5610-4674-93E7-025BA1B80917}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false" Comment="Interface to the transition class.&#13;&#10;&#13;&#10;Preceeding steps use this server to evaluate the transition."/>
		<Client Name="GetParentPtr" Required="true" Internal="false" Comment="Helper client for optaining a&#13;&#10;pointer to the parent SFC class."/>
		<Client Name="NextStep" Required="false" Internal="false" Comment="Client for activating following steps."/>
		<Client Name="PrevStep" Required="false" Internal="false" Comment="Client for disabling preceeding steps."/>
	</Channels>
	<RevDoku>
		<Owner Company="Sigmatek GmbH &amp; KG" Author="LesMax"/>
		<Dokumentation Revision="1.2" Date="2013-10-17" Author="LesMax" Company="Sigmatek GmbH &amp; KG" Description="Transitions now obtain a pointer to the&#13;&#10;parent Sfc class at initialisation."/>
		<Dokumentation Revision="1.1" Date="2013-10-14" Author="LesMax" Company="Sigmatek GmbH &amp; KG" Description="IOs of transitions can now be automatically&#13;&#10;written by setting the AutoWrite Property"/>
	</RevDoku>
</Class>
*)
Sfc_Transition_Base : CLASS
  //Servers:
	TransitionItf 	: SvrChCmd_DINT;
  //Clients:
	PrevStep 	: CltCh_DINT;
	NextStep 	: CltCh_DINT;
	GetParentPtr 	: CltCh_UDINT;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL Condition
		VAR_OUTPUT
			Result 	: DINT;
		END_VAR;
	
	FUNCTION CheckTransition
		VAR_OUTPUT
			Result 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL OnReadInternalVariables;
	
	FUNCTION VIRTUAL OnWriteInternalVariables;
	
	FUNCTION VIRTUAL GLOBAL TransitionItf::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Sfc_Transition_Base::@CT_
0$UINT,
2#0100000000000000$UINT, //TY_SFC_TRANSITION_BASE
1$UINT, 2$UINT, (SIZEOF(::Sfc_Transition_Base))$UINT, 
1$UINT, 3$UINT, 0$UINT, 
TO_UDINT(3505111842), "Sfc_Transition_Base", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Sfc_Transition_Base.TransitionItf.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(2620995219), "TransitionItf", 
//Clients:
(::Sfc_Transition_Base.PrevStep.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(954251537), "PrevStep", 
(::Sfc_Transition_Base.NextStep.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(908098157), "NextStep", 
(::Sfc_Transition_Base.GetParentPtr.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(3235255086), "GetParentPtr", 
END_FUNCTION


#define USER_CNT_Sfc_Transition_Base 3

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Sfc_Transition_Base] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Sfc_Transition_Base::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Sfc_Transition_Base, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Read		:= #Read();
	vmt.CmdTable.Write		:= #M_WR_DIRECT();
	vmt.CmdTable.Init		:= #Init();
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #Condition();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[1]		:= #OnReadInternalVariables();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[2]		:= #OnWriteInternalVariables();

#pragma warning (default : 74)
	TransitionItf.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF TransitionItf.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
FUNCTION VIRTUAL GLOBAL Sfc_Transition_Base::TransitionItf::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	output := CheckTransition();

END_FUNCTION


FUNCTION Sfc_Transition_Base::CheckTransition
	VAR_OUTPUT
		Result 	: DINT;
	END_VAR
  
  // Read all connected internal variable servers
  OnReadInternalVariables();

  // Check if the condition is met.
  if Condition() = true then
  
    // Transition condition is met.
    Result := 1;
    
    // Deactivate the previous step.
    PrevStep.Write(input:=0);
    
    // Activate the next step.
    NextStep.Write(input:=1);
    
  else
  
    // Transition condition is not met
    Result := 0;
  
  end_if;
  
  // Write all connected internal variable servers
  OnWriteInternalVariables();

END_FUNCTION


// Overridable for User Conditions
FUNCTION VIRTUAL Sfc_Transition_Base::Condition
	VAR_OUTPUT
		Result 	: DINT;
	END_VAR
  
  // Default condition is never met.
  Result := false;

END_FUNCTION


// Overrideable for reading connected internal variable servers
FUNCTION VIRTUAL Sfc_Transition_Base::OnReadInternalVariables

END_FUNCTION


// Overrideable for writing connected internal variable servers
FUNCTION VIRTUAL Sfc_Transition_Base::OnWriteInternalVariables

END_FUNCTION


FUNCTION VIRTUAL GLOBAL Sfc_Transition_Base::Init

  if _FirstScan then
  
    GetParentPtr := GetParentPtr.Read();
  
  end_if; 

END_FUNCTION
